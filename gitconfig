[user]
    name = Joseph Rouff
    email = <rouffj@gmail.com>
[core]
    autocrlf = input
    editor = vim
    excludesfile = ~/.gitignore
[http]
    sslVerify = false
[alias]
    ci   = commit
    di   = diff
    sdi  = diff --staged
    sdiff = diff --staged
    st   = status
    sta  = stash
    br   = branch
    co   = checkout
    cat  = cat-file -p
    lg   = log --graph --pretty=tformat:'%Cred%h%Creset -%C(yellow)%d%Creset%s %Cgreen(%an %cr)%Creset' --abbrev-commit --date=relative
    uncommit = update-ref HEAD HEAD^
    delete-merged-branches = "!f() { git branch --merged master | grep --invert-match --perl-regex 'master|stable|\\*' | xargs -n 1 git branch --delete; }; f"
    my-update-local-branches = "!f() { git fetch -p && git branch | xargs -n 1 git rebase; }; f" # Allow to update all local branches with remote branches with same name
    my-rebase-on-master = "!f() { git fetch -p && git rebase origin/master; }; f" # Rebase current branch with remote master
    my-reset-local-on-given-remote = "!git fetch -p $2 && git reset --hard $2" # Reset given local branch on remote one (http://stackoverflow.com/a/1628334)
    my-rm-last-commit = "!git reset --hard HEAD^" # Suppress last commit
    my-diff = "!git diff origin/master..HEAD" # Allow to get diff between current branch and remote master
    my-what-happened-on-remote = "!git fetch -p && git diff origin/$1..$1" # See what happened on given branch since the last fetch
    my-job= "!git diff HEAD --stat && git diff HEAD" # Display first updated files + all changes
    my-pr-squash="!git rebase -i origin/master" # Transform given PR from multiple to only one commit
[color]
    branch = auto
    diff = auto
    interactive = auto
    status = auto
[rerere]
    enabled = 1
[push]
    default = nothing # or simple but not other (https://git-scm.com/docs/git-config)
